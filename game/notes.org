#+TITLE: notes


* terminology

The data structures are a bit  confusing in the project.

~prompt~: Where a player enters *commands* to _do_ things in the game (ie "observe" "take X" "walk north")
~current-room~: Represents a _major_ chunk of where we are in the story.
~current-step~: Each room has several steps (observing, walking, picking up things).
~current-command~: Running a command in the prompt expects some kind of result -- even if the game says "I don't understand your command" -- this result data structure is the current-command.

* Anatomy of a room

#+BEGIN_SRC clojure
(def intro
  {:complete? false
   :steps {:missed-train ;; our current step, in a room.
           ;; Text is the piece of story that confronts the player.
           {:text "You miss the subway. A new one will be coming shortly, though."
            ;; Commands is a map of possible events the user can put into the prompt.
            ;; what the user types is currently used as a getter at these values.
            ;; ie. typing "observe" will convert the string to a keyword, and use it to fetch
            ;; the observe value from this map.
            :commands {:observe {:text "You see a small notepad on the ground near the subway tunnel entrance."
                                 ;; an event is a thing to trigger when :observe is called,
                                 ;; where the key is a re-frame event to trigger and the val the event value.
                                 :events {:go-to-step :missed-boat}}}}

           :missed-boat {:text "You miss A boat"
                         :commands {:observe {:text "it is very wet."
                                              :events {:go-to-step :next-thing!}}}}}})
#+END_SRC


* Features / Mechanics
** Quit/Save/Load
** Inventory
The inventory is more of a #core feature, but it can come in after we have the basics of navigation down.
** Audio                                                                       :idea:
- Being able to trigger sounds / music at certain points would be really cool.
- This should probably live alongside the story steps as events that are triggered in a story-step.
